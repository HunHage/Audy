<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>net.exploitables.Audy</groupId>
  <artifactId>Audy</artifactId>
  <version>1.0-SNAPSHOT</version>

  <name>Audy</name>
  <url>http://www.exploitables.net/Audy</url>

<!--SonaType repo for snapshots of D4J, don't uncomment for releases-->
  <repositories>
    <repository>
      <id>oss.sonatype.org-snapshot</id>
      <url>http://oss.sonatype.org/content/repositories/snapshots</url>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
    </repository>
    <repository>
      <id>repo.spring.io-milestone</id>
      <url>https://repo.spring.io/milestone</url>
    </repository>
  </repositories>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
<!--Discord Libraries-->
    <Discord4JVersion>3.1.4-SNAPSHOT</Discord4JVersion>
<!--File/Logging Libraries-->
    <LogbackClassicVersion>1.2.3</LogbackClassicVersion>
    <ApacheCommonsCodecVersion>1.15</ApacheCommonsCodecVersion>
<!--Network Libraries-->
    <ApacheCommonsHttpClientVersion>4.5.6</ApacheCommonsHttpClientVersion>
<!--SQL Libraries-->
    <JDBIVersion>3.17.0</JDBIVersion>
    <HikariCPVerison>3.4.5</HikariCPVerison>
    <PostgreSQLDriverVersion>42.2.5</PostgreSQLDriverVersion>
    <FlywayVersion>7.2.1</FlywayVersion>
<!--Misc. Libraries-->
    <JodaTimeVersion>2.10.5</JodaTimeVersion>
    <QuartzSchedulerVersion>2.3.2</QuartzSchedulerVersion>
    <JUnit4Version>4.13.1</JUnit4Version>
  </properties>

  <dependencies>
<!--Discord Libraries-->
    <dependency>
      <groupId>com.discord4j</groupId>
      <artifactId>discord4j-core</artifactId>
      <version>${Discord4JVersion}</version>
    </dependency>
<!--File/Logging Libraries-->
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>${LogbackClassicVersion}</version>
    </dependency>
    <dependency>
      <groupId>commons-codec</groupId>
      <artifactId>commons-codec</artifactId>
      <version>${ApacheCommonsCodecVersion}</version>
    </dependency>
    <!--Network Libraries-->
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpclient</artifactId>
      <version>${ApacheCommonsHttpClientVersion}</version>
    </dependency>
<!--SQL Libraries-->
    <dependency>
      <groupId>org.jdbi</groupId>
      <artifactId>jdbi3-core</artifactId>
      <version>${JDBIVersion}</version>
    </dependency>
    <dependency>
      <groupId>com.zaxxer</groupId>
      <artifactId>HikariCP</artifactId>
      <version>${HikariCPVerison}</version>
    </dependency>
    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
      <version>${PostgreSQLDriverVersion}</version>
    </dependency>
    <dependency>
      <groupId>org.flywaydb</groupId>
      <artifactId>flyway-core</artifactId>
      <version>${FlywayVersion}</version>
    </dependency>
<!--Misc. Libraries-->
    <dependency>
      <groupId>joda-time</groupId>
      <artifactId>joda-time</artifactId>
      <version>${JodaTimeVersion}</version>
    </dependency>
    <dependency>
      <groupId>org.quartz-scheduler</groupId>
      <artifactId>quartz</artifactId>
      <version>${QuartzSchedulerVersion}</version>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>${JUnit4Version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
<!--Add AudyMain to the manifest to make the JAR executable-->
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <configuration>
          <archive>
            <manifest>
              <addClasspath>true</addClasspath>
              <mainClass>net.exploitables.audy.AudyMain</mainClass>
            </manifest>
          </archive>
        </configuration>
      </plugin>
    </plugins>

    <pluginManagement>
      <plugins>
        <!-- clean lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#clean_Lifecycle -->
        <plugin>
          <artifactId>maven-clean-plugin</artifactId>
          <version>3.1.0</version>
        </plugin>
        <!-- default lifecycle, jar packaging: see https://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_jar_packaging -->
        <plugin>
          <artifactId>maven-resources-plugin</artifactId>
          <version>3.0.2</version>
        </plugin>
<!--        -->
<!--     Custom Build Entries   -->
<!--        -->
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.8.0</version>
          <configuration>
            <source>1.8</source>
            <target>1.8</target>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-assembly-plugin</artifactId>
          <version>3.3.0</version>
          <configuration>
            <descriptorRefs>
              <descriptorRef>jar-with-dependencies</descriptorRef>
            </descriptorRefs>
            <archive>
              <manifest>
                <addClasspath>true</addClasspath>
                <mainClass>net.exploitables.audy.AudyMain</mainClass>
              </manifest>
            </archive>
          </configuration>
          <executions>
            <execution>
              <id>make-assembly</id>
              <phase>package</phase>
              <goals>
                <goal>single</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <artifactId>maven-dependency-plugin</artifactId>
          <executions>
            <execution>
              <phase>process-sources</phase>
              <goals>
                <goal>copy-dependencies</goal>
              </goals>
              <configuration>
                <outputDirectory>target/lib</outputDirectory>
              </configuration>
            </execution>
          </executions>
        </plugin>
<!--     Write properties of pom.xml to properties file-->
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>properties-maven-plugin</artifactId>
          <version>1.0.0</version>
          <executions>
            <execution>
              <phase>generate-resources</phase>
              <goals>
                <goal>write-project-properties</goal>
              </goals>
              <configuration>
                <outputFile>${project.build.outputDirectory}/project.properties</outputFile>
              </configuration>
            </execution>
          </executions>
        </plugin>
<!--        -->
<!--     End Custom Build Entries   -->
<!--        -->
        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.22.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-jar-plugin</artifactId>
          <version>3.0.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-install-plugin</artifactId>
          <version>2.5.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>2.8.2</version>
        </plugin>
        <!-- site lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#site_Lifecycle -->
        <plugin>
          <artifactId>maven-site-plugin</artifactId>
          <version>3.7.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-project-info-reports-plugin</artifactId>
          <version>3.0.0</version>
        </plugin>
      </plugins>
    </pluginManagement>

<!-- Resources directory must be explicitly specified for exporting pom.xml properties to project.properties -->
    <resources>
      <resource>
        <directory>src/main/resources/</directory>
        <filtering>true</filtering>
      </resource>
    </resources>
  </build>
</project>
