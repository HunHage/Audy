/*
 * This file is a part of https://github.com/HunHage/Audy, also known as Audy
 *
 * Audy is licensed under the Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License.
 * To view a copy of this license, visit http://creativecommons.org/licenses/by-nc-sa/4.0/ or send a letter to
 * Creative Commons, PO Box 1866, Mountain View, CA 94042, USA.
 *
 * Audy is provided without any warranty, including any implied warranty.
 */

package net.exploitables.audy.scheduler;

import net.exploitables.audy.AudyDatabase;
import org.quartz.utils.ConnectionProvider;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import java.sql.Connection;
import java.sql.SQLException;

/**
 * In order to re-use the same connection pool (from my understanding) we want to provide connections
 *  from our already setup database connection with HikariCP. This also vastly simplifies configuration
 *  for database access, reusing what has already been created.
 *
 *  I presume this looks so bare due to already having a connection setup.
 */
public class AudyDatabaseConnectionProvider implements ConnectionProvider {
    private static Logger logger = LoggerFactory.getLogger(AudyDatabaseConnectionProvider.class);

    @Override
    public Connection getConnection() throws SQLException {
        return AudyDatabase.getConnection();
    }

    @Override
    public void shutdown() throws SQLException {
        logger.info("Shutting down Quartz SQL ConnectionProvider ...");
    }

    @Override
    public void initialize() throws SQLException {
        logger.info("Initializing Quartz SQL ConnectionProvider ...");
    }
}
