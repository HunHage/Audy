/*
 * This file is a part of https://github.com/HunHage/Audy, also known as Audy
 *
 * Audy is licensed under the Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License.
 * To view a copy of this license, visit http://creativecommons.org/licenses/by-nc-sa/4.0/ or send a letter to
 * Creative Commons, PO Box 1866, Mountain View, CA 94042, USA.
 *
 * Audy is provided without any warranty, including any implied warranty.
 */

package net.exploitables.audy.utilities;

import java.util.Collection;
import java.util.Iterator;
import java.util.function.Function;

public class ListFormatter {
    /**
     * Create a comma separated list of entries from the provided collection. No and before the last entry.
     * @param collection the collection to list as a string
     * @param transformer the method to convert each item in the collection to a string representation
     * @param limit the maximum number of entries to list before stopping
     * @param emptyMessage the message to return if the collection is empty
     * @param separator the separator to use between each item, defaults to ", "
     * @param <T> any class
     * @return a string with all entries listed and separated by a comma or custom separator
     */
    public static <T> String collectionToString(Collection<T> collection,
                                                Function<T, String> transformer,
                                                int limit,
                                                String emptyMessage,
                                                String ... separator) {
        if (collection.isEmpty()) return emptyMessage;
        if (separator.length == 0) separator = new String[]{", "};
        StringBuilder builder = new StringBuilder();

        Iterator<T> iterator = collection.iterator();
        T current = iterator.next();
        builder.append(transformer.apply(current));
        limit--;
        while (iterator.hasNext() && limit > 0) {
            current = iterator.next();
            builder.append(separator[0]).append(transformer.apply(current));
            limit--;
        }

        // Total the remaining entries that weren't printed
        int remaining = 0;
        while (iterator.hasNext()) {
            iterator.next();
            remaining++;
        }

        if (remaining > 0) {
            builder.append(" and ").append(remaining).append(" more.");
        }

        return builder.toString();
    }

}
