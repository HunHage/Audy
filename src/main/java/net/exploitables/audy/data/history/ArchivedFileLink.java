package net.exploitables.audy.data.history;

import net.exploitables.audy.AudyDatabase;
import org.jdbi.v3.core.mapper.reflect.ConstructorMapper;

import java.beans.ConstructorProperties;
import java.util.List;
import java.util.Optional;

public class ArchivedFileLink {
    /** Never null: The MD5 checksum of the file obtained from the provided urls */
    private final String md5;
    /** Never null: A list of all known URLs for a file */
    private List<String> urls;

    /** Create a new Instance of this class with field data pre-generated from SQL */
    @ConstructorProperties({"pk_md5", "urls"})
    public ArchivedFileLink(String md5, List<String> urls) {
        this.md5 = md5;
        this.urls = urls;
    }

//    /** Create a new Instance oif this class with pre-generated data from {@link ArchivedMessageFactory}*/
//    public ArchivedFileLink(String md5, List<String> urls) {
//        this.md5 = md5;
//        this.urls = urls;
//    }

    /**
     * @param md5 the MD5 checksum of the file to check for
     * @return true if a file with the given MD5 exists in the database, false otherwise.
     */
    public static boolean md5Exists(String md5) {
        return AudyDatabase.getJdbi().withHandle(handle -> {
            handle.registerRowMapper(ConstructorMapper.factory(ArchivedFileLink.class));
            return handle.createQuery("SELECT pk_md5 FROM tbl_file_links WHERE" +
                " pk_md5 = :pk_md5;")
                .bind("pk_md5", md5)
                .mapTo(String.class)
                .findOne()
                .isPresent();
        });
    }

    /**
     * @param url the url of an archived file to search for
     * @return true if a file with the given MD5 exists in the database, false otherwise.
     */
    public static boolean urlExists(String url) {
        return AudyDatabase.getJdbi().withHandle(handle -> {
            handle.registerRowMapper(ConstructorMapper.factory(ArchivedFileLink.class));
            return handle.createQuery("SELECT urls FROM tbl_file_links WHERE" +
                " ANY(urls) = :urls;")
                .bind("urls", url)
                .mapTo(String[].class)
                .findOne()
                .isPresent();
        });
    }

    /**
     * Get an Archived File from SQL by it's MD5
     * @param md5 the MD5 of the file
     * @return a present optional of a representative {@link ArchivedFileLink} if available, empty otherwise
     */
    public static Optional<ArchivedFileLink> getByMD5(String md5) {
        return AudyDatabase.getJdbi().withHandle(handle -> {
            handle.registerRowMapper(ConstructorMapper.factory(ArchivedFileLink.class));
            return handle.createQuery("SELECT * FROM tbl_file_links WHERE" +
                " pk_md5 = :pk_md5;")
                .bind("pk_md5", md5)
                .mapTo(ArchivedFileLink.class)
                .findOne();
        });
    }

    /**
     * @param url the url of an archived file to search for
     * @return a present optional if a representative (@link ArciveFileLink} if available, empty otherwise
     */
    public static Optional<ArchivedFileLink> getByUrl(String url) {
        return AudyDatabase.getJdbi().withHandle(handle -> {
            handle.registerRowMapper(ConstructorMapper.factory(ArchivedFileLink.class));
            return handle.createQuery("SELECT * FROM tbl_file_links WHERE" +
                " :urls = ANY(urls);")
                .bind("urls", url)
                .mapTo(ArchivedFileLink.class)
                .findOne();
        });
    }

    /**
     * Add a Url to the set of known Urls and save this instance to sql
     * @param url new Url to add
     * @return this instance modified and saved
     */
    ArchivedFileLink addUrl(String url) {
        this.urls.add(url);
        return this.updateNow();
    }

    /** Create a new row in SQL representing this data
     * @return this instance
     * */
    ArchivedFileLink createNow() {
        AudyDatabase.getJdbi().useHandle(handle -> {
            handle.registerArrayType(String.class, "varchar");
            handle.createUpdate("INSERT INTO tbl_file_links (" +
                " pk_md5," +
                " urls" +
                " ) VALUES (" +
                " :md5," +
                " :urls" +
                ");")
                .bind("md5", this.md5)
                .bindArray("urls", String.class, this.urls)
                .execute();
        });

        return this;
    }

    /**
     * Update this object in SQL immediately with a new array of Urls
     * @return this instance
     */
    ArchivedFileLink updateNow() {
        AudyDatabase.getJdbi().useHandle(handle -> {
            handle.registerArrayType(String.class, "varchar");
            handle.createUpdate("UPDATE tbl_file_links SET" +
                " urls = :urls" +
                " WHERE" +
                " pk_md5 = :md5" +
                ";")
                .bind("md5", this.md5)
                .bindArray("urls", String.class, this.urls)
                .execute();
        });

        return this;
    }

    public String       getMD5()   { return md5; }
    public List<String> getUrls() { return urls; }
}
