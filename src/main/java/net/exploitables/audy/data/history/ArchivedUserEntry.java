/*
 * This file is a part of https://github.com/HunHage/Audy, also known as Audy
 *
 * Audy is licensed under the Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License.
 * To view a copy of this license, visit http://creativecommons.org/licenses/by-nc-sa/4.0/ or send a letter to
 * Creative Commons, PO Box 1866, Mountain View, CA 94042, USA.
 *
 * Audy is provided without any warranty, including any implied warranty.
 */

package net.exploitables.audy.data.history;

import net.exploitables.audy.AudyDatabase;

import java.beans.ConstructorProperties;

/**
 * An extension of the {@link ArchivedUserLatest} class which adds a field for the timestamp.
 */
public class ArchivedUserEntry extends ArchivedUserLatest {

    /** Create an empty entry corresponding to a user. Used when creating a new entry for user history. */
    ArchivedUserEntry(long userId) {
        super(userId);
    }

    /** Create a new Instance of this class with field data pre-generated from SQL or {@link ArchivedMessageFactory} */
    @ConstructorProperties({"user_id", "timestamp", "username", "discriminator", "avatar_md5", "avatar_name"})
    public ArchivedUserEntry(long userId,
                      long timestamp,
                      String username,
                      String discriminator,
                      String avatarMD5,
                      String avatarName) {
        super(userId, timestamp, username, discriminator, avatarMD5, avatarName);
    }

    /**
     * Create a new row in SQL representing this data
     * @return this instance
     * */
    @Override
    public ArchivedUserLatest createEntryNow() {
        AudyDatabase.getJdbi().useHandle(handle -> {
            handle.registerArrayType(String.class, "varchar");
            handle.createUpdate("INSERT INTO tbl_user_history (" +
                " pk_user_id," +
                " timestamp," +
                " username," +
                " discriminator," +
                " avatar_md5," +
                " avatar_name" +
                " ) VALUES (" +
                " :pk_user_id," +
                " :timestamp," +
                " :username," +
                " :discriminator," +
                " :avatar_md5," +
                " :avatar_name" +
                ");")
                .bind("pk_user_id", this.userId)
                .bind("username", this.username)
                .bind("timestamp", this.timestamp)
                .bind("discriminator", this.discriminator)
                .bind("avatar_md5", this.avatarMD5)
                .bind("avatar_name", this.avatarName)
                .execute();
        });

        return this;
    }

    public long getTimestamp() { return timestamp; }
}
