/*
 * This file is a part of https://github.com/HunHage/Audy, also known as Audy
 *
 * Audy is licensed under the Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License.
 * To view a copy of this license, visit http://creativecommons.org/licenses/by-nc-sa/4.0/ or send a letter to
 * Creative Commons, PO Box 1866, Mountain View, CA 94042, USA.
 *
 * Audy is provided without any warranty, including any implied warranty.
 */

package net.exploitables.audy.data.bundles;

import discord4j.core.event.domain.message.MessageCreateEvent;
import discord4j.core.object.entity.Guild;
import discord4j.core.object.entity.Member;
import net.exploitables.audy.data.entity.GuildConfig;
import net.exploitables.audy.internal.ArgsList;
import net.exploitables.audy.internal.tree.CommandTreeNode;
import reactor.core.publisher.Mono;

/**
 * A "bundle" of data related to MessageCreateEvent which aids in the command lifecycle.
 */
public class GuildMessageEventBundle extends MessageEventBundle {
    // Entities
    final Guild guild;
    final Member member;

    // Configurations
    private GuildConfig guildConfig;

    /**
     * Create a new GuildMessageEventBundle from a received MessageCreateEvent and a parsed ArgsList
     * @param event event that caused the creation of this bundle
     * @param args parsed content of the message as an ArgsList
     */
    public GuildMessageEventBundle(MessageCreateEvent event,
                                   Guild guild, Member author,
                                   ArgsList<String> args,
                                   CommandTreeNode commandNode) {
        super(event, author, args, commandNode);
        this.guild = guild;
        this.member = author;
    }

    public final Guild getGuild()   { return guild; }
    public final Member getMember() { return member; }

    public final Mono<GuildConfig> getGuildData() {
        if (this.guildConfig == null) {
            this.guildConfig = GuildConfig.getGuildConfig(guild).block();
        }
        return Mono.justOrEmpty(guildConfig);
    }
}
