/*
 * This file is a part of https://github.com/HunHage/Audy, also known as Audy
 *
 * Audy is licensed under the Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License.
 * To view a copy of this license, visit http://creativecommons.org/licenses/by-nc-sa/4.0/ or send a letter to
 * Creative Commons, PO Box 1866, Mountain View, CA 94042, USA.
 *
 * Audy is provided without any warranty, including any implied warranty.
 */

package net.exploitables.audy.subscribers;

import discord4j.core.event.domain.guild.GuildCreateEvent;
import discord4j.rest.util.Color;
import discord4j.rest.util.Permission;
import net.exploitables.audy.AudyClient;
import net.exploitables.audy.AudyMain;
import net.exploitables.audy.data.entity.GuildConfigFactory;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import reactor.core.publisher.Mono;

/**
 * A guild is "created" when either the bot connects to the gateway and receives the guilds it is in.
 *  Or when the bot is invited to and joins a new guild. Both events are received as a {@link GuildCreateEvent}
 *
 * Send a hello message when first joining a server.
 */
public class GuildCreateMonitor {
    private static final Logger logger = LoggerFactory.getLogger(GuildCreateMonitor.class);

    /**
     * Check if we haven't send a hello message to the server, if not then the bot has joined a new guild.
     * @param event the event created when joining a new guild or connecting to one already joined
     * @return an empty mono
     */
    public static Mono<Void> onGuildCreateEvent(GuildCreateEvent event) {
        return GuildConfigFactory.getGuildConfigFromSQL(event.getGuild())
            .filter(guildConfig -> !guildConfig.hasJoined())
            .flatMap(guildConfig -> {
                // Immediately set that we've joined and save the config.
                // Sending the hello message is more luxury than function.
                guildConfig.setJoined();
                return GuildConfigFactory.saveGuildConfigNow(guildConfig)
                    // Log that we joined a guild.
                    .doOnSuccess(booleanSignal -> logger.info("Joined a new guild! ID:" +
                        event.getGuild().getId().asString() + " Name:" + event.getGuild().getName()))
                    // Get the system channel, this is where join messages are posted
                    .flatMap(aBoolean -> event.getGuild().getSystemChannel())
                    // Filter out the channel if Audy doesn't have send message permissions to avoid a 403
                    .filterWhen(textChannel -> textChannel
                            .getEffectivePermissions(AudyClient.getClient().getSelfId())
                            .map(permissions -> permissions.contains(Permission.SEND_MESSAGES)))
                    // At this point if we still have a channel then we have permissions and the system channel is set
                    // Send a hello message
                    .flatMap(channel -> channel.createEmbed(spec -> {
                        spec.setColor(Color.of(AudyMain.getConfiguration().getEmbedColor()));
                        String username = AudyClient.getClient().getSelfUsername();
                        spec.setTitle("Hello, I'm " + username);
                        spec.setDescription("Thank you for inviting me to your server, to see what commands you can " +
                            "use please say `a-help` or `a- help`, if you forget my prefix you can ping me with " +
                            "`@" + username + " help` or `@" + username + " prefix`");
                        spec.setFooter(username + " " + AudyMain.getVersion(), null);
                    }))
                    .then();
            });
    }
}
