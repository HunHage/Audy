/*
 * This file is a part of https://github.com/HunHage/Audy, also known as Audy
 *
 * Audy is licensed under the Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License.
 * To view a copy of this license, visit http://creativecommons.org/licenses/by-nc-sa/4.0/ or send a letter to
 * Creative Commons, PO Box 1866, Mountain View, CA 94042, USA.
 *
 * Audy is provided without any warranty, including any implied warranty.
 */

package net.exploitables.audy.commands.arguments;

/**
 * Data that pertains to how many terms from an {@link net.exploitables.audy.internal.ArgsList} should be consumed
 *  for the given {@link Argument}. The {@link ArgumentSet} will hold information about the order
 *  based on the order instances of this are added to it.
 */
public class ArgumentPosition {
    /** The number of terms to take from the {@link net.exploitables.audy.internal.ArgsList} when
     *   parsing for the Argument. 0 will take the remaining. */
    public final int count;
    /** The {@link Argument} to to check the taken terms against, this should be the same instance
     *   that is put into the map used by the {@link ArgumentSet}. */
    public final Argument argument;

    public ArgumentPosition(int count, Argument argument) {
        this.count = count;
        this.argument = argument;
    }
}
