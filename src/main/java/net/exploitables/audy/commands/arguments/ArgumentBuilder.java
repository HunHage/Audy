package net.exploitables.audy.commands.arguments;

/**
 * A builder for {@link Argument}
 */
public class ArgumentBuilder {
    private String shortOpt;
    private String longOpt;
    private boolean required;
    private boolean hasParameter;
    private String parameterName;
    private String description;
    private ArgumentValueParser parser;

    /**
     * Create a new builder with the minimum required information
     * @param shortOpt the short option identifier for this argument
     * @param longOpt the long option identifier for this argument
     * @param description a description of what this argument does
     */
    public ArgumentBuilder(String shortOpt, String longOpt, String description) {
        this.shortOpt = shortOpt;
        this.longOpt = longOpt;
        this.required = false;
        this.hasParameter = false;
        this.parameterName = "";
        this.description = description;
        this.parser = (s) -> null;
    }

    public ArgumentBuilder setRequired(boolean required) {
        this.required = required;
        return this;
    }

    public ArgumentBuilder setHasParameter(boolean hasParameter) {
        this.hasParameter = hasParameter;
        return this;
    }

    public ArgumentBuilder setParameterName(String parameterName) {
        this.parameterName = parameterName;
        return this;
    }

    public ArgumentBuilder setValueParser(ArgumentValueParser parser) {
        this.parser = parser;
        return this;
    }

    /**
     * @return an {@link Argument} instance based on the data added to this instance.
     */
    public Argument build() {
        return new Argument(shortOpt, longOpt, required, hasParameter, parameterName, description, parser);
    }
}
