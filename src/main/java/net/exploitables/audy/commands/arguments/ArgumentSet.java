/*
 * This file is a part of https://github.com/HunHage/Audy, also known as Audy
 *
 * Audy is licensed under the Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License.
 * To view a copy of this license, visit http://creativecommons.org/licenses/by-nc-sa/4.0/ or send a letter to
 * Creative Commons, PO Box 1866, Mountain View, CA 94042, USA.
 *
 * Audy is provided without any warranty, including any implied warranty.
 */

package net.exploitables.audy.commands.arguments;

import net.exploitables.audy.data.Pair;
import net.exploitables.audy.utilities.CodeBlock;

import java.util.ArrayList;
import java.util.Comparator;
import java.util.List;

/**
 * A collection of Arguments (List)
 */
public class ArgumentSet {
    Arguments arguments;
    List<ArgumentPosition> positionalArguments;

    // Create a new ArgumentParser class with a default help argument
    public ArgumentSet() {
        arguments = new Arguments();
        positionalArguments = null;

        arguments.add(new ArgumentBuilder("h", "help", "show help").build());
    }

    public String getHelp() {
        List<Pair<String, String>> definitions = new ArrayList<>();
        for (Argument argument : arguments) {
            StringBuilder sb = new StringBuilder();
            sb.append("[");
            // Append the shortOpt and longOpt
            sb.append(" -").append(argument.getShortOpt())
                .append(",  --").append(argument.getLongOpt());

            if (argument.hasParameter())
                sb.append(" ").append(argument.getParameterName());

            if (argument.isRequired())
                sb.append(" *");

            sb.append(" ]");
            definitions.add(new Pair<>(sb.toString(), argument.getDescription()));
        }

        int longWidth = definitions.stream()
                .max(Comparator.comparing(pair -> pair.getKey().length()))
                .orElse(definitions.get(0))
                .getKey()
                .length();
        CodeBlock manip = new CodeBlock().setCodeType("ini");
        for (Pair<String, String> pair : definitions) {
            manip.setW(longWidth).append(pair.getKey()).append(" ").append(pair.getValue()).newLine();
        }

        return manip.toString();
    }
}
