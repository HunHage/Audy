/*
 * This file is a part of https://github.com/HunHage/Audy, also known as Audy
 *
 * Audy is licensed under the Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License.
 * To view a copy of this license, visit http://creativecommons.org/licenses/by-nc-sa/4.0/ or send a letter to
 * Creative Commons, PO Box 1866, Mountain View, CA 94042, USA.
 *
 * Audy is provided without any warranty, including any implied warranty.
 */

package net.exploitables.audy.commands;

/**
 * Command Execution status referenced after command completed normally or with an exception.
 * This is referenced to determine how to respond to the calling user.
 */
public enum CommandState {
    // Command execution failed with a message. Send it.
    FAILED(true, "The command failed to complete with the following message: `{0}`"),
    // Command execution succeeded, send the message in the CommandResponse.
    SUCCESS(false, null),
    // Command execution succeeded, don't send the message in the CommandResponse.
    SUCCESS_NO_SEND(false, null),
    // Command encountered an exception, send a message with the exception name/message.
    ERROR(true, "The command encountered an internal error with the following message: `{0}`"),
    // Command otherwise executed improperly and didn't set it's state. Send a message.
    UNKNOWN(true, "The command ran improperly. `{0}`");

    boolean error;
    String statement;
    CommandState(boolean error, String statement) {
        this.error = error;
        this.statement = statement;
    }

    /**
     * @return true if the command encountered an error or executed improperly
     */
    public boolean notifyError() {
        return error;
    }

    /**
     * @return the message to send to the Calling User if the command failed,
     *  should have the '{0}' replaced with a message
     */
    public String getStatement() {
        return statement;
    }
}
