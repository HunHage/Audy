package net.exploitables.audy.commands.guild.info;

import discord4j.common.util.Snowflake;
import discord4j.core.object.entity.Member;
import net.exploitables.audy.utilities.CodeBlock;
import net.exploitables.audy.utilities.TimeFormatter;

import java.time.Instant;

/**
 * Shared logic for all Info Commands.
 */
public class InfoSuperCommand {
    /**
     * Generate a two line representation of when the snowflake was created and how old it is on each line respectively.
     * @param id the {@link Snowflake} ID of the entity to display the age of.
     * @return a String stating the date the ID was created and the age in Years/Months/Days/Hours/Minutes and total
     *          days old. The string does not have a new line at the end.
     */
    private String generateAgeString(Snowflake id) {
        return "Created: " + TimeFormatter.formatUTC(id) + "\n" +
                "         " + TimeFormatter.formatAge(id.getTimestamp());
    }

    /**
     * Generate a two line representation of when a {@link Member} joined a guild.
     * @param joinTime the {@link Instant} that the guild was joined as provided by the Member instance
     * @return a String stating the date the ID was created and the age in Years/Months/Days/Hours/Minutes and total
     *          days old. The string does not have a new line at the end.
     */
    private String generateJoinedString(Instant joinTime) {
        // This needs an extra space preceding the `joined` in order to line up with `created`
        return " Joined: " + TimeFormatter.formatUTC(joinTime) + "\n" +
                "         " + TimeFormatter.formatAge(joinTime);
    }

    /**
     * Generate a two line representation of when the snowflake was created and how old it is within a Code Block.
     * @param id the {@link Snowflake} ID of the entity to display the age of.
     * @return a formatted Code Block displaying the age of the snowflake
     */
    String generateAgeDescription(Snowflake id) {
        return new CodeBlock()
            .append(generateAgeString(id))
            .toString();
    }

    /**
     * Generate a four line representation of when a {@link Member} account was created, how old the account is,
     *  when the account joined, and how long ago the account joined.
     * @param member the {@link Member} to display the ages of.
     * @return a formatted Code Block displaying the ages of the member
     */
    String generateMemberCreateAndJoinDescription(Member member) {
        return new CodeBlock()
            .append(generateAgeString(member.getId()))
            .newLine()
            .append(generateJoinedString(member.getJoinTime()))
            .toString();
    }
}
