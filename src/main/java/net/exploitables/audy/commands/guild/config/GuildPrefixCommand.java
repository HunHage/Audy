/*
 * This file is a part of https://github.com/HunHage/Audy, also known as Audy
 *
 * Audy is licensed under the Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License.
 * To view a copy of this license, visit http://creativecommons.org/licenses/by-nc-sa/4.0/ or send a letter to
 * Creative Commons, PO Box 1866, Mountain View, CA 94042, USA.
 *
 * Audy is provided without any warranty, including any implied warranty.
 */

package net.exploitables.audy.commands.guild.config;

import net.exploitables.audy.AudyMain;
import net.exploitables.audy.commands.CommandState;
import net.exploitables.audy.commands.GuildCommandListener;
import net.exploitables.audy.commands.MessageBundle;
import net.exploitables.audy.data.CommandConfig;
import net.exploitables.audy.data.CommandConfigBuilder;
import net.exploitables.audy.data.DiscordPermission;
import net.exploitables.audy.data.entity.GuildConfig;
import reactor.core.publisher.Mono;

import java.util.regex.Pattern;

/**
 * Change the guild's prefix. Requires the member to have administrator permissions on the server.
 */
public class GuildPrefixCommand {
    private static GuildPrefixCommand singleton;
    private static Pattern invalidPrefix = Pattern.compile(".*\\s+.*"); // Any whitespace
    private CommandConfig commandConfig;

    private GuildPrefixCommand() {
        this.commandConfig = new CommandConfigBuilder(this::execute, GuildPrefixCommand.class)
            .addHelp("Set prefix: `%p config guild prefix <new prefix>",
                "Set the command prefix in this guild to the one " +
                "specified. If a prefix isn't specified then the guild prefix will be set back to the global " +
                "default prefix `" + AudyMain.getConfiguration().getDefaultPrefix() + "`\n\nA prefix must meet " +
                "the following conditions:\n- 1-8 characters\n- no spaces, tabs, or newlines")
            .addMemberPermission(DiscordPermission.ADMINISTRATOR)
            .build();
    }

    public static GuildPrefixCommand get() {
        if (singleton == null) singleton = new GuildPrefixCommand();
        return singleton;
    }

    public CommandConfig getCommandConfig() {
        return this.commandConfig;
    }

    /**
     * Change the Guild prefix to one specified by the calling user.
     *
     * @param bundle bundle created from a command issued within a guild
     * @return an empty mono when execution is complete
     */
    public Mono<Void> execute(MessageBundle bundle) {
        String term = bundle.getArgs().combineRemaining();

        // Do not allow prefixes with whitespace, they are incompatible with the CommandListener
        if (invalidPrefix.matcher(term).matches()) {
            bundle.getResponse().setContentTitle(
                "The prefix '" + term + "' contains spaces, please specify a prefix with no spaces.");
            bundle.getResponse().setState(CommandState.FAILED_EXPECTED);
            return Mono.empty();
        }

        // Do not allow long prefixes
        if (term.length() > 8) {
            bundle.getResponse().setContentTitle(
                "The prefix '" + term + "' is '" + term.length() + "' characters long, " +
                "please specify a prefix that is 8 characters or less.");
            bundle.getResponse().setState(CommandState.FAILED_EXPECTED);
            return Mono.empty();
        }

        // Edge case, set prefix back to default properly, also set properly if no prefix is specified
        if (term.equalsIgnoreCase(AudyMain.getConfiguration().getDefaultPrefix()) || term.isEmpty()) {
            term = null;
        }

        String newPrefix = term;
        return bundle.getGuildData()
            .doOnSuccess(guildConfig -> guildConfig.setPrefix(newPrefix))
            .flatMap(GuildConfig::saveNow)
            .doOnSuccess(guildConfig -> {
                // Update prefix in CommandListener immediately
                //noinspection OptionalGetWithoutIsPresent
                GuildCommandListener.get().updateGuildPrefix(bundle.getGuild().get().getId().asLong(), newPrefix);
                String title = "Successfully set `" + bundle.getGuild().get().getName() +
                        "`s prefix to `";
                if (newPrefix != null) {
                    title += newPrefix + "`";
                } else {
                    title += AudyMain.getConfiguration().getDefaultPrefix() + "`";
                }

                bundle.getResponse().setContentTitle(title);
                bundle.getResponse().setState(CommandState.SUCCESS);
            })
            .then();
    }
}
